# This is a basic workflow to help you get started with Actions

name: Test Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ci-testing]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: ls &  cd frontend & yarn install
          
      - name: Build site
        run: cd frontend & yarn build
      - name: Test
        run: |
          pwd
          ls
          cd frontend/build
          ls
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Instantiate Docker Meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v3.7.0
        with:
          images: elms-repository/elms-backend
          tags: |
            type=raw,value=elms-repository/elms-backend-{{branch}}-{{sha}}
      - name: print name
        id: echometa
        env:
          values: ${{steps.meta.outputs.tags}}
        run: |
          echo "Hello" 
          echo $values
      - name: Set outputs
        id: shainput
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: echo ${{ steps.shainput.outputs.sha_short }}
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: elms-repository
          IMAGE_TAG: ${{github.sha}}
          IMAGE_NAME: ${{steps.shainput.outputs.sha_short}}
        run: |
          pwd
          cp -R ./frontend/build ./backend/elms-backend/public
          cd backend/elms-backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
      
