# This is a basic workflow to help you get started with Actions

name: Deploy ELMS backend to ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [backend-ci]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  createrepo:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./backend/IaC/ecr"
    env:
      TF_ACTION_WORKING_DIR: "./backend/IaC/ecr"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2.0.0
      - name: "Configure AWS Credentials"
        uses: clouddrove/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-west-1
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        env:
          tf_actions_working_dir: "./backend/IaC/ecr"
      - name: Terraform Init
        id: init
        run: terraform init
        env:
          tf_actions_working_dir: "./backend/IaC/ecr"
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        env:
          tf_actions_working_dir: "./backend/IaC/ecr"
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        env:
          tf_actions_working_dir: "./backend/IaC/ecr"
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
          tf_actions_working_dir: "./backend/IaC/ecr"
        continue-on-error: true
  build:
    needs: createrepo
    name: Build Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./backend/IaC/ecr"
    env:
      working-directory: "./backend/elms-backend"
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Instantiate Docker Meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: elms-repository/elms-backend
          tag-sha: true
      - name: Build & Push image to amazon ecr
        uses: docker/build-push-action@v2
        with:
          file: './backend/elms-backend/Dockerfile'
          push: true
          registry: ${{ steps.login-ecr.outputs.registry }}
          repository: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REGISTRY }}
          add_git_labels: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          tag_with_ref: true
